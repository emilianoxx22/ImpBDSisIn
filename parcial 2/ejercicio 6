
mysql> use emilianoxxx11$default;
Database changed
mysql> CREATE TABLE materiales (
    ->     Producto varchar(30),
    ->     Cantidad int
    -> );
Query OK, 0 rows affected (0.04 sec)
mysql> INSERT INTO materiales ( Producto, Cantidad) VALUES
    -> ('Lapíz', 3 ),
    ->     ('Borrador', 4 ),
    ->     ('Cuaderno', 2 );
Query OK, 3 rows affected (0.01 sec)
Records: 3  Duplicates: 0  Warnings: 0
mysql> 
mysql> WITH RECURSIVE numeros AS (
    ->   SELECT 1 AS n
    ->   UNION ALL
    ->   SELECT n + 1 FROM numeros WHERE n < 100
    -> )
    -> SELECT t.producto, 1 AS cantidad
    -> FROM materiales t
    -> JOIN numeros n ON n.n <= t.cantidad;
+----------+----------+
| producto | cantidad |
+----------+----------+
| Cuaderno |        1 |
| Borrador |        1 |
| Lapíz    |        1 |
| Cuaderno |        1 |
| Borrador |        1 |
| Lapíz    |        1 |
| Borrador |        1 |
| Lapíz    |        1 |
| Borrador |        1 |
+----------+----------+
9 rows in set (0.00 sec)

mysql> Ejercicio 2:
    -> CREATE TABLE Asientos (
    ->     num_asiento INTEGER
    -> );
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'Ejercicio 2:
CREATE TABLE Asientos (
    num_asiento INTEGER
)' at line 1
mysql> CREATE TABLE Asientos (
    ->     num_asiento INTEGER
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> INSERT INTO asientos (num_asiento) VALUES
    -> (7), (13), (14), (15),
    -> (27), (28), (29), (30),
    -> (31), (32), (33), (34), (35),
    -> (52), (53), (54);
ERROR 1146 (42S02): Table 'emilianoxxx11$default.asientos' doesn't exist
mysql> INSERT INTO Asientos (num_asiento) VALUES
    -> (7), (13), (14), (15),
    -> (27), (28), (29), (30),
    -> (31), (32), (33), (34), (35),
    -> (52), (53), (54);
Query OK, 16 rows affected (0.00 sec)
Records: 16  Duplicates: 0  Warnings: 0

mysql> WITH RECURSIVE numeros AS (
    ->     SELECT 1 AS n
    ->     UNION ALL
    ->     SELECT n + 1 FROM numeros WHERE n + 1 <= 54
    -> ),
    -> libres AS (
    ->     SELECT n AS espacio
    ->     FROM numeros
    ->     WHERE n NOT IN (SELECT num_asiento FROM Asientos)
    -> ),
    -> agrupados AS (
    ->     SELECT
    ->         espacio,
    ->         espacio - ROW_NUMBER() OVER (ORDER BY espacio) AS grupo
    ->     FROM libres
    -> )
    -> SELECT
    ->     MIN(espacio) AS espacio_inicio,
    ->     MAX(espacio) AS espacio_final
    -> FROM agrupados
    -> GROUP BY grupo
    -> ORDER BY espacio_inicio;
+----------------+---------------+
| espacio_inicio | espacio_final |
+----------------+---------------+
|              1 |             6 |
|              8 |            12 |
|             16 |            26 |
|             36 |            51 |
+----------------+---------------+
4 rows in set (0.00 sec)

mysql> WITH RECURSIVE numeros AS (
    ->     SELECT 1 AS n
    ->     UNION ALL
    ->     SELECT n + 1 FROM numeros WHERE n + 1 <= 54
    -> )
    -> SELECT COUNT(*) AS disponibles
    -> FROM numeros
    -> WHERE n NOT IN (SELECT num_asiento FROM Asientos);
+-------------+
| disponibles |
+-------------+
|          38 |
+-------------+
1 row in set (0.00 sec)

mysql> SELECT
    ->     CASE WHEN MOD(num_asiento, 2) = 0 THEN 'pares' ELSE 'impares' END AS tipo,
    ->     COUNT(*) AS total
    -> FROM Asientos
    -> GROUP BY tipo;
+---------+-------+
| tipo    | total |
+---------+-------+
| impares |     9 |
| pares   |     7 |
+---------+-------+
2 rows in set (0.00 sec)

mysql> 
mysql> CREATE TABLE tiempos (
    ->     Inicio DATE,
    ->     Final DATE
    -> );
Query OK, 0 rows affected (0.03 sec)

mysql> INSERT INTO tiempos (Inicio, Final)
    -> VALUES
    ->     ('2025-01-01', '2025-01-05'),
    ->     ('2025-01-03', '2025-01-09'),
    ->     ('2025-01-10', '2025-01-11'),
    ->     ('2025-01-12', '2025-01-16'),
    ->     ('2025-01-15', '2025-01-19');
Query OK, 5 rows affected (0.01 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> 
mysql> WITH Ordenado AS (
    ->     SELECT
    ->         *,
    ->         LAG(Final) OVER (ORDER BY Inicio) AS Final_Anterior,
    ->         LAG(Inicio) OVER (ORDER BY Inicio) AS Inicio_Anterior
    ->     FROM tiempos
    -> ),
    -> Marcado AS (
    ->     SELECT *,
    ->         CASE
    ->             WHEN Final_Anterior IS NULL OR Inicio > Final_Anterior THEN 1
    ->             ELSE 0
    ->         END AS NuevoGrupo
    ->     FROM Ordenado
    -> ),
    -> Grupos AS (
    ->     SELECT *,
    ->         SUM(NuevoGrupo) OVER (ORDER BY Inicio ROWS UNBOUNDED PRECEDING) AS Grupo
    ->     FROM Marcado
    -> )
    -> SELECT
    ->     MIN(Inicio) AS Inicio,
    ->     MAX(Final) AS Final
    -> FROM Grupos
    -> GROUP BY Grupo
    -> ORDER BY Inicio;
+------------+------------+
| Inicio     | Final      |
+------------+------------+
| 2025-01-01 | 2025-01-09 |
| 2025-01-10 | 2025-01-11 |
| 2025-01-12 | 2025-01-19 |
+------------+------------+
3 rows in set (0.00 sec)
mysql> 
